name: Pull Request
on:
  pull_request:
    types: [labeled, opened, synchronize, unlabeled, closed]

permissions:
  contents: read
  id-token: write
  checks: write
  pull-requests: write

jobs:
  build-and-test:
    if: github.event.action != 'unlabeled' && github.event.action != 'closed'
    name: Build and Test
    uses: ./.github/workflows/reusable-build.yml
    secrets: inherit
    with:
      run_tests: true
  
  terraform-check:
    name: Validate Terraform code
    if: github.event.action != 'unlabeled' && github.event.action != 'closed'
    uses: ./.github/workflows/reusable-terraform-check.yml
    secrets: inherit
    strategy:
      matrix:
        path: ["ops/jobs/development", "ops/jobs/staging", "ops/jobs/prod"]
    with:
      path: ${{ matrix.path }}
  
  notify:
    name: Notify
    needs: build-and-test
    if: github.event.action != 'unlabeled' && github.event.action != 'closed' && always()
    runs-on: ubuntu-latest
    steps:
      - uses: andrewscwei/slack-action@v1.0.0
        with:
          success-prefix: ðŸŒ²
          success: ${{ needs.build-and-test.result == 'success' }}
          webhook-url: ${{ secrets.SLACK_DEVOPS_WEBHOOK_URL }}

  deploy-preview:
    if: |
      (github.event.action == 'labeled' && github.event.label.name == ':rocket: deploy') ||
      (github.event.action != 'labeled' && contains(github.event.pull_request.labels.*.name, ':rocket: deploy'))
    needs: build-and-test
    name: Deploy Preview environment
    uses: ./.github/workflows/reusable-deploy.yml
    secrets: inherit
    with:
      cloud_run_service_name: core-service-development
      version: ${{ needs.build-and-test.outputs.version }}
      preview: true
      environment: "pr-${{ github.event.number }}"

  clean-up-preview:
    if: |
      (github.event.action == 'unlabeled' && github.event.label.name == ':rocket: deploy') ||
      (github.event.action == 'closed' && contains(github.event.pull_request.labels.*.name, ':rocket: deploy'))
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Authenticate Google Cloud
        uses: google-github-actions/auth@v1
        with:
          workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.GCP_SERVICE_ACC }}
      - name: 'Set up Cloud SDK'
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{ secrets.GCP_PROJECT }}
  
      - name: Remove preview service traffic tag
        run: gcloud run services update-traffic core-service-development --region us-central1 --remove-tags pr-${{ github.event.number }}
      
      - name: Delete GitHub Deployment environment
        if: always()
        uses: bobheadxi/deployments@v1.3.0
        with:
          step: delete-env
          token: ${{ secrets.GH_ACCESS_TOKEN }}
          env: "pr-${{ github.event.number }}"
