name: Deploy
on:
  workflow_call:
    inputs:
      image_name:
        default: 'gcr.io/pinedefi/core-service'
        description: Specifies the Docker image name
        required: false
        type: string
      cloud_run_service_name:
        description: Name of the Google Cloud Run service to deploy
        required: true
        type: string
      version:
        description: Version that corresponds to image tag
        required: true
        type: string
      environment:
        description: Environment to deploy to
        required: true
        type: string
      preview:
        default: false
        description: Version that corresponds to image tag
        required: false
        type: boolean

permissions:
  contents: read
  id-token: write

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Authenticate Google Cloud
        uses: google-github-actions/auth@v1
        with:
          workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.GCP_SERVICE_ACC }}
      
      - name: Create a GitHub Deployment
        uses: bobheadxi/deployments@v1.3.0
        id: deployment
        with:
          step: start
          token: ${{ secrets.GH_ACCESS_TOKEN }}
          env: ${{ inputs.environment }}
          ref: ${{ github.event_name == 'pull_request' && github.head_ref || github.ref }}
      
      - name: Deploy to Cloud Run
        id: deploy
        uses: google-github-actions/deploy-cloudrun@v0
        with:
          service: ${{ inputs.cloud_run_service_name }}
          region: us-central1
          image: "${{ inputs.image_name }}:${{ inputs.version }}"
          tag: ${{ inputs.preview && inputs.version || 'latest' }}
          no_traffic: ${{ inputs.preview }}
      
      - name: Update traffic reference for non-preview envs
        if: ${{ !inputs.preview }}
        uses: google-github-actions/deploy-cloudrun@v0
        with:
          service: ${{ inputs.cloud_run_service_name }}
          region: us-central1
          tag_traffic: latest=100
      
      - name: Update the GitHub Deployment status
        uses: bobheadxi/deployments@v1.3.0
        if: always()
        with:
          step: finish
          token: ${{ secrets.GH_ACCESS_TOKEN }}
          status: ${{ job.status }}
          env: ${{ steps.deployment.outputs.env }}
          deployment_id: ${{ steps.deployment.outputs.deployment_id }}
          env_url: ${{ steps.deploy.outputs.url }}
