name: CI
on:
  push:
    branches-ignore: ['main']
env:
  IMAGE_NAME: gcr.io/pinedefi/treasury-service
jobs:
  build:
    name: Build/Test
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      id-token: 'write'
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: recursive
          token: ${{ secrets.GH_ACCESS_TOKEN }}
      - name: Authenticate Google Cloud
        id: gcloud
        uses: google-github-actions/auth@v0
        with:
          token_format: access_token
          workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.GCP_SERVICE_ACC }}
      - name: Set up Cloud SDK
        uses: 'google-github-actions/setup-gcloud@v0'
      - name: Login to GCR
        uses: docker/login-action@v1
        with:
          registry: gcr.io
          username: oauth2accesstoken
          password: ${{ steps.gcloud.outputs.access_token }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Build test target
        uses: docker/build-push-action@v2
        with:
          cache-from: type=gha,scope=${{ github.workflow }}
          cache-to: type=gha,scope=${{ github.workflow }},mode=max
          context: .
          load: true
          push: false
          tags: ${{ env.IMAGE_NAME }}:test
          target: test
      - name: Run tests
        run: IMAGE_TAG=test docker-compose -f docker-compose.test.yml up --exit-code-from app
      - name: Set metadata
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.IMAGE_NAME }}
          flavor: latest=true
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=sha,prefix=,format=short,priority=1000
      - name: Build release target
        uses: docker/build-push-action@v2
        with:
          cache-from: type=gha,scope=${{ github.workflow }}
          cache-to: type=gha,scope=${{ github.workflow }},mode=max
          context: .
          labels: ${{ steps.meta.outputs.labels }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          target: release
  notify:
    name: Notify
    needs: [build]
    if: ${{ always() }}
    runs-on: ubuntu-latest
    steps:
      - uses: andrewscwei/slack-action@v1.0.0
        with:
          success-prefix: ðŸŒ²
          success: ${{ needs.build.result == 'success' }}
          webhook-url: ${{ secrets.SLACK_DEVOPS_WEBHOOK_URL }}
