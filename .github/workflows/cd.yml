name: CD
on:
  push:
    branches: ['main']
env:
  IMAGE_NAME: gcr.io/${{ secrets.GCP_PROJECT }}/${{ secrets.GCP_APPLICATION }}
jobs:
  deploy:
    name: Build/Test/Deploy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: recursive
          token: ${{ secrets.GH_ACCESS_TOKEN }}
      - name: Authenticate Google Cloud
        uses: google-github-actions/setup-gcloud@v0
        with:
          service_account_email: ${{ secrets.GCP_EMAIL }}
          service_account_key: ${{ secrets.GCP_CREDENTIALS }}
          export_default_credentials: true
      - name: Authenticate Docker
        run: gcloud auth configure-docker
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Build test target
        uses: docker/build-push-action@v2
        with:
          cache-from: type=gha,scope=${{ github.workflow }}
          cache-to: type=gha,scope=${{ github.workflow }},mode=max
          context: .
          load: true
          push: false
          tags: ${{ env.IMAGE_NAME }}:test
          target: test
      - name: Run tests
        run: IMAGE_TAG=test docker-compose -f docker-compose.test.yml up --exit-code-from app
      - name: Set metadata
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.IMAGE_NAME }}
          flavor: latest=true
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=sha,prefix=,format=short,priority=1000
      - name: Build release target
        uses: docker/build-push-action@v2
        with:
          cache-from: type=gha,scope=${{ github.workflow }}
          cache-to: type=gha,scope=${{ github.workflow }},mode=max
          context: .
          labels: ${{ steps.meta.outputs.labels }}
          load: true
          push: false
          tags: ${{ steps.meta.outputs.tags }}
          target: release
      - name: Deploy
        run: |
          gcloud config set project ${{ secrets.GCP_PROJECT }}
          gcloud builds submit --tag ${{ fromJSON(steps.meta.outputs.json).tags[0] }}
          gcloud config set run/region us-central1
          gcloud run deploy ${{ secrets.GCP_APPLICATION }} --image ${{ fromJSON(steps.meta.outputs.json).tags[0] }} \
            --platform managed \
            --allow-unauthenticated \
            --memory 512M
  notify:
    name: Notify
    needs: [deploy]
    if: ${{ always() }}
    runs-on: ubuntu-latest
    steps:
      - uses: andrewscwei/slack-action@v1.0.0
        with:
          success-prefix: ðŸŒ²
          success: ${{ needs.deploy.result == 'success' }}
          webhook-url: ${{ secrets.SLACK_DEVOPS_WEBHOOK_URL }}
