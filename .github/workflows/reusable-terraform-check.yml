name: Terraform check

on:
  workflow_call:
    inputs:
      path:
        description: Path to directory with Terraform code
        required: true
        type: string

jobs:
  terraform_checks:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          submodules: recursive
          token: ${{ secrets.GH_ACCESS_TOKEN }}

      - uses: marceloprado/has-changed-path@v1.0.1
        id: changed
        with:
          paths: ${{ inputs.path }}

      - name: Authenticate Google Cloud
        if: steps.changed.outputs.changed == 'true'
        uses: google-github-actions/auth@v1
        with:
          token_format: access_token
          workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.GCP_SERVICE_ACC }}
      
      - uses: hashicorp/setup-terraform@v2
        if: steps.changed.outputs.changed == 'true'
        with:
          terraform_version: 1.3.9
      
      - name: Terraform check
        if: steps.changed.outputs.changed == 'true'
        working-directory: ${{ inputs.path }}
        run: |
          terraform fmt -check -recursive
          terraform init
          terraform validate -no-color
      
      - name: Terraform plan
        if: steps.changed.outputs.changed == 'true'
        working-directory: ${{ inputs.path }}
        run: terraform plan -no-color
      
      - uses: actions/github-script@v6
        if: github.event_name == 'pull_request' && steps.changed.outputs.changed == 'true'
        env:
          PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### Terraform Plan ðŸ“–\`${{ steps.plan.outcome }}\`
      
            <details><summary>Show Plan</summary>
      
            \`\`\`\n
            ${process.env.PLAN}
            \`\`\`
      
            </details>
      
            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Working Directory: \`${{ env.tf_actions_working_dir }}\`, Workflow: \`${{ github.workflow }}\`*`;
      
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })
